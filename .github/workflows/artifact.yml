name: Digger Workflow

on:
  pull_request

permissions:
  id-token: write # Important for at least docker gha cache
  contents: read

jobs:

    
  write-to-artefact:
    runs-on: ubuntu-latest
    steps:
      - name: Adding required env vars for caching Docker build
        uses: actions/github-script@v7
        env:
          github-token: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env['ACTIONS_CACHE_URL'])
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env['ACTIONS_RUNTIME_TOKEN'])
            core.exportVariable('ACTIONS_RUNTIME_URL', process.env['ACTIONS_RUNTIME_URL'])
                
      - name: write file
        id: write
        shell: bash
        run: |
          set -euxo pipefail
          export ACTIONS_RUNTIME_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN
          export ACTIONS_RUNTIME_URL=$ACTIONS_ID_TOKEN_REQUEST_URL

          echo abczyz > data.txt
          
          ARTIFACT_NAME='artifact-name'

          HEADERS=(
            --header 'Accept: application/json;api-version=6.0-preview'
            --header "Authorization: Bearer $ACTIONS_RUNTIME_TOKEN"
          )
          ARTIFACT_BASE="${ACTIONS_RUNTIME_URL}_apis/pipelines/workflows/${GITHUB_RUN_ID}/artifacts?api-version=6.0-preview"

          curl \
              -XPOST \
              --silent \
              --fail-with-body \
              "${HEADERS[@]}" \
              --header 'Content-Type: application/json' \
              --data '{"type": "actions_storage", "name": "'"${ARTIFACT_NAME}"'"}' \
              "$ARTIFACT_BASE"
              
          RESOURCE_URL="$(
            curl \
              -XPOST \
              --silent \
              --fail-with-body \
              "${HEADERS[@]}" \
              --header 'Content-Type: application/json' \
              --data '{"type": "actions_storage", "name": "'"${ARTIFACT_NAME}"'"}' \
              "$ARTIFACT_BASE" | jq --exit-status --raw-output .fileContainerResourceUrl
          )"

          curl \
            -XPUT \
            --silent \
            --fail-with-body \
            "${HEADERS[@]}" \
            --header 'Content-Type: application/octet-stream' \
            --header 'Content-Range: bytes 0-10/11' \
            --data 'hello world' \
            "${RESOURCE_URL}?itemPath=${ARTIFACT_NAME}/data.txt"

          curl \
            -XPATCH \
            --silent \
            --fail-with-body \
            "${HEADERS[@]}" \
            --header 'Content-Type: application/json' \
            --data '{"size": 11}' \
            "${ARTIFACT_BASE}&artifactName=${ARTIFACT_NAME}"